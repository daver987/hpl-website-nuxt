generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                     String    @id @unique @default(uuid())
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt
  company_name           String
  company_address        String
  company_phone          String?
  company_email          String
  company_account_number Int
  Contact                Contact[]
}

model Contact {
  id                 String      @id @unique @default(uuid())
  created_at         DateTime    @default(now())
  updated_at         DateTime    @default(now())
  first_name         String
  last_name          String
  email_address      String      @unique
  phone_number       String
  stripe_customer_id String?
  is_customer        Boolean     @default(false)
  quotes             Quote[]
  Account            Account?    @relation(fields: [accountId], references: [id])
  accountId          String?
  Conversion         Conversion?

  @@index([accountId])
}

model Conversion {
  id              String   @id @unique @default(uuid())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  utm_term        String?
  utm_medium      String?
  utm_source      String?
  utm_campaign    String?
  gclid           String?
  source          String?
  conversion_name String?
  Contact         Contact  @relation(fields: [contactId], references: [id])
  contactId       String   @unique
}

model Location {
  id                String   @id @unique @default(uuid())
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  name              String
  formatted_address String
  lat               Float
  long              Float
  place_id          String
  types             Json?
  Trip              Trip?    @relation(fields: [tripId], references: [id])
  tripId            String?

  @@index([tripId])
}

model Trip {
  id             String     @id @unique @default(uuid())
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
  pickup_date    DateTime
  pickup_time    DateTime
  distance_text  String
  distance_value Int
  duration_text  String
  duration_value Int
  is_hourly      Boolean    @default(false)
  passengers     Int
  hours          String?
  base_fare      Float
  locations      Location[]
  Quote          Quote?     @relation(fields: [quote_number], references: [quote_number])
  quote_number   Int?

  @@index([quote_number])
}

model Quote {
  quote_number  Int         @id @unique @default(autoincrement())
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  is_roundtrip  Boolean     @default(false)
  trips         Trip[]
  Surcharges    Surcharge[]
  tax           Tax?        @relation(fields: [taxId], references: [id])
  total_fare    Float
  subtotal_fare Float
  service       Service     @relation(fields: [serviceValue], references: [value])
  vehicle       Vehicle     @relation(fields: [vehicleValue], references: [value])
  Contact       Contact     @relation(fields: [contactId], references: [id])
  contactId     String
  serviceValue  Int
  vehicleValue  Int
  taxId         String?

  @@index([contactId])
  @@index([serviceValue])
  @@index([vehicleValue])
  @@index([taxId])
}

model Service {
  value            Int      @id @unique @default(autoincrement())
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  label            String
  isDisabled       Boolean  @default(false)
  limo_anywhere_id Int?
  quotes           Quote[]
}

model Surcharge {
  id            String   @id @unique @default(uuid())
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  name          String
  description   String?
  is_percentage Boolean  @default(true)
  is_flat       Boolean  @default(false)
  is_taxable    Boolean  @default(true)
  is_active     Boolean  @default(true)
  amount        Float
  quotes        Quote[]
}

model Tax {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  tax_name   String
  tax_amount Float
  region     String
  is_active  Boolean  @default(true)
  quotes     Quote[]
}

model Vehicle {
  value             Int      @id @unique @default(autoincrement())
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())
  max_passengers    Int
  max_luggage       Int
  per_km            Float
  per_hour          Float
  min_hours_hourly  Int
  min_distance      Int
  min_rate_distance Float    @default(value: 0)
  is_active         Boolean  @default(true)
  name              String
  label             String
  limo_anywhere_id  Int?
  vehicle_image     String?
  quotes            Quote[]
}
