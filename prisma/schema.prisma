generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                     String   @id @unique @default(uuid())
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  company_name           String
  company_address        String
  company_phone          String?
  company_email          String
  company_account_number Int
  users                  User[]
}

model User {
  id                 String      @id @unique @default(uuid())
  created_at         DateTime    @default(now())
  updated_at         DateTime    @default(now())
  first_name         String
  last_name          String
  email_address      String      @unique
  phone_number       String
  stripe_customer_id String?
  is_customer        Boolean     @default(false)
  quotes             Quote[]
  Account            Account?    @relation(fields: [accountId], references: [id])
  accountId          String?
  Conversion         Conversion?

  @@index([accountId])
}

model Conversion {
  id              String   @id @unique @default(uuid())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  utm_term        String?
  utm_medium      String?
  utm_source      String?
  utm_campaign    String?
  gclid           String?
  source          String?
  conversion_name String?
  Contact         User     @relation(fields: [contactId], references: [id])
  contactId       String   @unique
}

model Quote {
  quote_number             Int        @id @unique @default(autoincrement())
  created_at               DateTime   @default(now())
  updated_at               DateTime   @updatedAt
  distance                 Float
  service_type_id          Service    @relation(fields: [serviceValue], references: [value])
  vehicle_type_id          Vehicle    @relation(fields: [vehicleValue], references: [value])
  line_items               LineItem[]
  selected_hours           Int?
  pickup_date              Float
  pickup_time              Float
  is_round_trip            Boolean    @default(false)
  return_date              Float
  return_time              Float
  base_rate                Float
  line_items_total         Float
  taxable_line_items_total Float
  tax_amount               Float
  total_price              Float
  trip_data                Json
  User                     User       @relation(fields: [userId], references: [id])
  userId                   String
  serviceValue             Int
  vehicleValue             Int
  SalesTax                 SalesTax?  @relation(fields: [salesTaxId], references: [id])
  salesTaxId               String?

  @@index([userId])
  @@index([salesTaxId])
  @@index([vehicleValue])
  @@index([serviceValue])
}

model Service {
  value            Int      @id @unique @default(autoincrement())
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  label            String
  is_active        Boolean  @default(false)
  limo_anywhere_id Int?
  is_hourly        Boolean  @default(false)
  quotes           Quote[]
}

model LineItem {
  id            String   @id @unique @default(uuid())
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  label         String
  description   String?
  is_percentage Boolean  @default(true)
  is_taxable    Boolean  @default(true)
  is_active     Boolean  @default(true)
  amount        Float
  quotes        Quote[]
}

model SalesTax {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  tax_name   String
  amount     Float
  region     String
  is_active  Boolean  @default(true)
  quotes     Quote[]
}

model Vehicle {
  value            Int      @id @unique @default(autoincrement())
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
  max_passengers   Int
  max_luggage      Int
  per_km           Float
  per_hour         Float
  min_hours        Int
  min_distance     Int
  min_rate         Float    @default(value: 0)
  is_active        Boolean  @default(true)
  label            String
  limo_anywhere_id Int?
  vehicle_image    String?
  quotes           Quote[]
}
