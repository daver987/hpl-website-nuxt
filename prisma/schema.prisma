generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

generator zod {
  provider                  = "zod-prisma-types"
  createRelationValuesTypes = true
  createPartialTypes        = true
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                     String   @id @unique @default(uuid())
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  company_name           String
  company_address        String
  company_phone          String?
  company_email          String
  company_account_number Int
  users                  User[]
}

model User {
  id                 String      @id @default(uuid())
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt
  first_name         String?
  last_name          String?
  email_address      String?     @unique
  phone_number       String?
  stripe_customer_id String?
  is_customer        Boolean     @default(false)
  quotes             Quote[]
  Account            Account?    @relation(fields: [account_id], references: [id])
  account_id         String?
  notes              String?
  meta_data          Json?
  conversion         Conversion?

  @@index([account_id])
}

model Conversion {
  id              String   @id @default(uuid())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  user            User     @relation(fields: [user_id], references: [id])
  utm_term        String?
  utm_medium      String?
  utm_source      String?
  utm_campaign    String?
  gclid           String?
  source          String?
  conversion_name String?
  user_id         String   @unique
}

model Quote {
  quote_number          Int        @id @unique @default(autoincrement())
  created_at            DateTime   @default(now())
  updated_at            DateTime   @updatedAt
  service               Service    @relation(fields: [service_id], references: [value])
  vehicle               Vehicle    @relation(fields: [vehicle_id], references: [value])
  user                  User       @relation(fields: [user_id], references: [id])
  sales_tax             SalesTax?  @relation(fields: [sales_tax_id], references: [id])
  line_items            LineItem[]
  trips                 Trip[]
  pickup_date           Float?
  pickup_time           Float?
  return_date           Float?
  return_time           Float?
  formatted_pickup_date String?
  formatted_pickup_time String?
  formatted_return_date String?
  formatted_return_time String?
  return_service_type   String?
  selected_hours        Int?       @default(value: 2)
  selected_passengers   Int        @default(value: 1)
  is_round_trip         Boolean    @default(false)
  is_booked             Boolean    @default(false)
  payment               Payment?
  user_id               String
  service_id            Int
  vehicle_id            Int
  sales_tax_id          Int

  @@index([user_id])
  @@index([sales_tax_id])
  @@index([vehicle_id])
  @@index([service_id])
}

model Trip {
  id                            String     @id @unique @default(uuid())
  created_at                    DateTime   @default(now())
  updated_at                    DateTime   @updatedAt
  quote                         Quote      @relation(fields: [quote_number], references: [quote_number])
  quote_number                  Int
  origin_lat                    Float
  origin_lng                    Float
  origin_name                   String
  origin_formatted_address      String
  origin_full_name              String?
  origin_types                  Json
  origin_place_id               String
  destination_lat               Float
  destination_lng               Float
  destination_name              String
  destination_formatted_address String
  destination_full_name         String?
  destination_types             Json
  destination_place_id          String
  distance                      Float
  flight_information            Json?
  line_items_list               Json?
  line_items_subtotal           Float?
  line_items_tax                Float?
  line_items_total              Float?
  affiliate_payout              Float?
  is_farmed_out                 Boolean?   @default(false)
  is_return                     Boolean    @default(false)
  notes                         String?
  Payment                       Payment?
  locations                     Location[]
  flight                        Flight?

  @@index([quote_number])
}

model Flight {
  id                    String    @id @default(uuid())
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  airline_code          String
  airline_name          String?
  flight_number         String
  is_active             Boolean   @default(false)
  is_landed             Boolean   @default(false)
  is_arrived            Boolean   @default(false)
  departure_time        DateTime?
  arrival_time          DateTime?
  departure_time_actual DateTime?
  arrival_time_actual   DateTime?
  trip                  Trip?     @relation(fields: [trip_id], references: [id])
  trip_id               String?   @unique
}

model Location {
  id                String   @id @default(uuid())
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  lat               Float
  lng               Float
  name              String
  formatted_address String
  full_name         String?
  types             Json
  place_id          String
  is_origin         Boolean  @default(false)
  is_destination    Boolean  @default(false)
  is_waypoint       Boolean  @default(false)
  trip              Trip?    @relation(fields: [trip_id], references: [id])
  trip_id           String?

  @@index([trip_id])
}

model Payment {
  id               String   @id @default(uuid())
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  is_preauthorized Boolean  @default(false)
  is_paid          Boolean  @default(false)
  setup_intent     Json?
  payment_intent   Json?
  payment_type     String?
  notes            String?
  trip_id          String?  @unique
  trip             Trip?    @relation(fields: [trip_id], references: [id])
  quote            Quote    @relation(fields: [quote_number], references: [quote_number])
  quote_number     Int      @unique
}

model Service {
  value            Int      @id @unique @default(autoincrement())
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  label            String
  is_active        Boolean  @default(false)
  is_hourly        Boolean  @default(false)
  limo_anywhere_id Int?
  quotes           Quote[]
}

model LineItem {
  id            String   @id @unique @default(uuid())
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  label         String
  description   String?
  is_percentage Boolean  @default(true)
  is_taxable    Boolean  @default(true)
  is_active     Boolean  @default(true)
  amount        Float
  applies_to    String?
  quotes        Quote[]
}

model SalesTax {
  id         Int      @id @unique @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tax_name   String
  amount     Float
  region     String
  is_active  Boolean  @default(true)
  quotes     Quote[]
}

model Vehicle {
  value            Int      @id @unique @default(autoincrement())
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  max_passengers   Int      @default(value: 0)
  max_luggage      Int      @default(value: 0)
  per_km           Float    @default(value: 0)
  per_hour         Float    @default(value: 0)
  min_hours        Int      @default(value: 0)
  min_distance     Int      @default(value: 0)
  min_rate         Float    @default(value: 0)
  is_active        Boolean  @default(true)
  label            String
  limo_anywhere_id Int?
  vehicle_image    String?
  quotes           Quote[]
}
